corrplot(cor_matrix, method = "color", tl.cex = 0.3)
summary(Datos)
cor_matrix <- cor(Datos)
corrplot(cor_matrix, method = "color", tl.cex = 0.2)
summary(Datos)
cor_matrix <- cor(Datos)
corrplot(cor_matrix, method = "color", tl.cex = 0.1)
View(cor_matrix)
summary(Datos)
cor_matrix <- cor(Datos)
cor_matrix
ggplot(Datos, aes(x = Year, y = Reproduccion_bruta)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Reproducción Bruta por Año",
x = "Año",
y = "Reproducción Bruta") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(Datos, aes(x = Year, y = `Tasa de crecimiento natural (por cien habitantes)`)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Tasa de crecimiento natural por Año",
x = "Año",
y = "Tasa de crecimiento natural") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(Datos, aes(x = Year, y = `General (por mil habitantes)`)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Mortalidad general por mil habitantes por Año",
x = "Año",
y = "Mortalidad general por mil habitantes") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(Datos, aes(x = `Tasa de nupcialidad (por mil habitantes)`, y = `Tasa global de fecundidad (por mujer)`)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Tasa de fecundidad por Tasa de nupcialidad",
x = "Año",
y = "Mortalidad general por mil habitantes") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(Datos, aes(x = Year, y = Reproduccion_bruta)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Reproducción Bruta por Año",
x = "Año",
y = "Reproducción Bruta") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(Datos, aes(x = Year, y = `Tasa de crecimiento natural (por cien habitantes)`)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Tasa de crecimiento natural por Año",
x = "Año",
y = "Tasa de crecimiento natural") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(Datos, aes(x = Year, y = `General (por mil habitantes)`)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Mortalidad general por mil habitantes por Año",
x = "Año",
y = "Mortalidad general por mil habitantes") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(Datos, aes(x = Católicos, y = `Tasa global de fecundidad (por mujer)`)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Tasa de fecundidad por Casamientos católicos",
x = "Año",
y = "Mortalidad general por mil habitantes") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(Datos, aes(x = Year, y = Reproduccion_bruta)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Reproducción Bruta por Año",
x = "Año",
y = "Reproducción Bruta") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(Datos, aes(x = Year, y = `Tasa de crecimiento natural (por cien habitantes)`)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Tasa de crecimiento natural por Año",
x = "Año",
y = "Tasa de crecimiento natural") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(Datos, aes(x = Year, y = `General (por mil habitantes)`)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Mortalidad general por mil habitantes por Año",
x = "Año",
y = "Mortalidad general por mil habitantes") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(Datos, aes(x = Católicos, y = `Tasa global de fecundidad (por mujer)`)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Tasa de fecundidad por Casamientos católicos",
x = "Año",
y = "Mortalidad general por mil habitantes") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(Datos, aes(x = Civiles, y = `Tasa global de fecundidad (por mujer)`)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Tasa de fecundidad por Casamientos católicos",
x = "Año",
y = "Mortalidad general por mil habitantes") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(Datos, aes(x = Year, y = Reproduccion_bruta)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Reproducción Bruta por Año",
x = "Año",
y = "Reproducción Bruta") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(Datos, aes(x = Year, y = `Tasa de crecimiento natural (por cien habitantes)`)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Tasa de crecimiento natural por Año",
x = "Año",
y = "Tasa de crecimiento natural") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(Datos, aes(x = Year, y = `General (por mil habitantes)`)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Mortalidad general por mil habitantes por Año",
x = "Año",
y = "Mortalidad general por mil habitantes") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(Datos, aes(x = Católicos, y = `Tasa global de fecundidad (por mujer)`)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Tasa de fecundidad por Casamientos catolicos",
x = "Casamientos catolicos",
y = "Tasa de fecundidad") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(Datos, aes(x = Civiles, y = `Tasa global de fecundidad (por mujer)`)) +
geom_line() +
geom_point() +  # To add points on the line
labs(title = "Tasa de fecundidad por Casamientos civiles",
x = "Casamientos civiles",
y = "Tasa de fecundidad") +
theme_minimal() +  # To apply a minimal theme
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
summary(Datos)
cor_matrix <- cor(Datos)
summary(Datos)
cor_matrix <- cor(Datos)
corrplot(Datos, "circle")
# Cargar las configuraciones iniciales
source("cod/r/setup.R")
summary(Datos)
cor_matrix <- cor(Datos)
corrplot(Datos, "circle")
summary(Datos)
cor_matrix <- cor(Datos)
corrplot(cor_matrix, "circle")
summary(Datos)
cor_matrix <- cor(Datos)
corrplot(cor_matrix, "circle", tl.cex = 0.7))
summary(Datos)
cor_matrix <- cor(Datos)
corrplot(cor_matrix, "circle", tl.cex = 0.7)
summary(Datos)
cor_matrix <- cor(Datos)
corrplot(cor_matrix, "circle", tl.cex = 0.5)
summary(Datos)
cor_matrix <- cor(Datos)
corrplot(cor_matrix, "circle", tl.cex = 0.4)
summary(Datos)
cor_matrix <- cor(Datos)
corrplot(cor_matrix, "circle", tl.cex = 0.5)
View(Datos)
View(Datos)
# Cargar las configuraciones iniciales
source("cod/r/setup.R")
p1 <- ggplot(Datos, aes(x = Year, y = Reproduccion_bruta)) +
geom_line() +
geom_point() +
labs(title = "Reproducción Bruta por Año",
x = "Año",
y = "Reproducción Bruta") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p1_interactive <- ggplotly(p1)
p2 <- ggplot(Datos, aes(x = Year, y = `Tasa de crecimiento natural (por cien habitantes)`)) +
geom_line() +
geom_point() +
labs(title = "Tasa de crecimiento natural por Año",
x = "Año",
y = "Tasa de crecimiento natural") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p2_interactive <- ggplotly(p2)
p3 <- ggplot(Datos, aes(x = Year, y = `General (por mil habitantes)`)) +
geom_line() +
geom_point() +
labs(title = "Mortalidad general por mil habitantes por Año",
x = "Año",
y = "Mortalidad general por mil habitantes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p3_interactive <- ggplotly(p3)
p4 <- ggplot(Datos, aes(x = Year, y = Poblacion_total)) +
geom_line() +
geom_point() +
labs(title = "Poblacion total por Año",
x = "Año",
y = "Poblacion total") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p4_interactive <- ggplotly(p4)
p5 <- ggplot(Datos, aes(x = Year, y = `Tasa de nupcialidad (por mil habitantes)`)) +
geom_line() +
geom_point() +
labs(title = "Tasa de nupcialidad por mil habitantes por Año",
x = "Año",
y = "Nupcialidad por mil habitantes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p5_interactive <- ggplotly(p5)
View(p1_interactive)
p1_interactive
p2_interactive
p3_interactive
p4_interactive
p5_interactive
# Optionally, combine all plots into a single interactive dashboard
subplot(
p1_interactive,
p2_interactive,
p3_interactive,
p4_interactive,
p5_interactive,
nrows = 3, margin = 0.05
)
# Combined plot with multiple lines
p_combined <- ggplot(Datos) +
geom_line(aes(x = Year, y = Reproduccion_bruta, color = "Reproducción Bruta")) +
geom_point(aes(x = Year, y = Reproduccion_bruta, color = "Reproducción Bruta")) +
geom_line(aes(x = Year, y = `Tasa de crecimiento natural (por cien habitantes)`, color = "Tasa de crecimiento natural")) +
geom_point(aes(x = Year, y = `Tasa de crecimiento natural (por cien habitantes)`, color = "Tasa de crecimiento natural")) +
geom_line(aes(x = Year, y = `General (por mil habitantes)`, color = "Mortalidad general")) +
geom_point(aes(x = Year, y = `General (por mil habitantes)`, color = "Mortalidad general")) +
geom_line(aes(x = Year, y = Poblacion_total, color = "Poblacion total")) +
geom_point(aes(x = Year, y = Poblacion_total, color = "Poblacion total")) +
geom_line(aes(x = Year, y = `Tasa de nupcialidad (por mil habitantes)`, color = "Tasa de nupcialidad")) +
geom_point(aes(x = Year, y = `Tasa de nupcialidad (por mil habitantes)`, color = "Tasa de nupcialidad")) +
labs(title = "Diferentes Métricas por Año",
x = "Año",
y = "Valor",
color = "Métricas") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Convert to interactive plot using plotly
p_combined_interactive <- ggplotly(p_combined)
# Display the interactive plot
p_combined_interactive
p_combined <- ggplot(Datos) +
geom_line(aes(x = Year, y = Reproduccion_bruta, color = "Reproducción Bruta")) +
geom_point(aes(x = Year, y = Reproduccion_bruta, color = "Reproducción Bruta")) +
geom_line(aes(x = Year, y = `Tasa de crecimiento natural (por cien habitantes)`, color = "Tasa de crecimiento natural")) +
geom_point(aes(x = Year, y = `Tasa de crecimiento natural (por cien habitantes)`, color = "Tasa de crecimiento natural")) +
geom_line(aes(x = Year, y = `General (por mil habitantes)`, color = "Mortalidad general")) +
geom_point(aes(x = Year, y = `General (por mil habitantes)`, color = "Mortalidad general")) +
geom_line(aes(x = Year, y = `Tasa de nupcialidad (por mil habitantes)`, color = "Tasa de nupcialidad")) +
geom_point(aes(x = Year, y = `Tasa de nupcialidad (por mil habitantes)`, color = "Tasa de nupcialidad")) +
labs(title = "Diferentes Métricas por Año",
x = "Año",
y = "Valor",
color = "Métricas") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Convert to interactive plot using plotly
p_combined_interactive <- ggplotly(p_combined)
# Display the interactive plot
p_combined_interactive
View(Datos)
Tabla_dinamica <- Datos %>%
select(Year, Poblacion_total, Poblacion_hombres, Poblacion_Mujeres, Reproduccion_bruta,
`Tasa de crecimiento natural (por cien habitantes)`,
`General (por mil habitantes)`,
Mortalidad_hombres, Mortalidad_mujeres)
# Preparativos
# Cargar las configuraciones iniciales
source("cod/r/setup.R")
Tabla_dinamica <- Datos %>%
select(Year, Poblacion_total, Poblacion_hombres, Poblacion_Mujeres, Reproduccion_bruta,
`Tasa de crecimiento natural (por cien habitantes)`,
`General (por mil habitantes)`,
Mortalidad_hombres, Mortalidad_mujeres)
View(Datos)
Tabla_dinamica <- Datos %>%
select(Year, Poblacion_total, Poblacion_hombres, Poblacion_mujeres, Reproduccion_bruta,
`Tasa de crecimiento natural (por cien habitantes)`,
`General (por mil habitantes)`,
Mortalidad_hombres, Mortalidad_mujeres)
View(Tabla_dinamica)
# Preparativos
# Cargar las configuraciones iniciales
source("cod/r/setup.R")
Tabla_dinamica <- Datos %>%
select(Year, Poblacion_total, Poblacion_hombres, Poblacion_mujeres, Reproduccion_bruta,
`Tasa de crecimiento natural (por cien habitantes)`,
`General (por mil habitantes)`,
Mortalidad_hombres, Mortalidad_mujeres)
Tabla <- datatable(Tabla_dinamica)
Tabla_dinamica <- Datos %>%
select(Year, Poblacion_total, Poblacion_hombres, Poblacion_mujeres, Reproduccion_bruta,
`Tasa de crecimiento natural (por cien habitantes)`,
`General (por mil habitantes)`,
Mortalidad_hombres, Mortalidad_mujeres)
Tabla <- datatable(Tabla_dinamica)
Tabla
Tabla_dinamica <- Datos %>%
select(Year, Poblacion_total, Poblacion_hombres, Poblacion_mujeres, Reproduccion_bruta,
`Tasa de crecimiento natural (por cien habitantes)`,
`General (por mil habitantes)`,
Mortalidad_hombres, Mortalidad_mujeres,
`Tasa de nupcialidad (por mil habitantes)`)
Tabla <- datatable(Tabla_dinamica)
Tabla
Tabla_dinamica <- Datos %>%
select(Year, Poblacion_total,
Poblacion_hombres,
Poblacion_mujeres,
Reproduccion_bruta,
`Tasa de crecimiento natural (por cien habitantes)`,
`General (por mil habitantes)`,
Mortalidad_hombres,
Mortalidad_mujeres,
`Tasa de nupcialidad (por mil habitantes)`) %>%
rename(Mortalidad_general = `General (por mil habitantes)`)
Tabla <- datatable(Tabla_dinamica)
Tabla
# Preparativos
# Cargar las configuraciones iniciales
source("cod/r/setup.R")
# Se carga la base del archivo .xlsx
Datos.original <- read_excel("data/Datos.xlsx")
# Tratamiento de los datos
# Se eliminan las entradas que cuentan con valores NA, ya que las entradas con NA unicamente corresponden a titulos de los apartados, no resulta inadecuado. eliminar estos
Datos <- Datos.original %>% drop_na()
# Se transforman los datos a un formato long, esto para llevar a cabo la transposicion adecuada para estudiar los datos.
Datos <- Datos %>%
pivot_longer(cols = -`Componente demográfico`, names_to = "Year", values_to = "Value")
# Los datos previamente convertidos a un formato long ahora se pueden pasar a un formate wide, de forma que resulta mas adecuado llevar a cabo el estudio.
Datos <- Datos %>%
pivot_wider(names_from = `Componente demográfico`, values_from = "Value")
# Se convierten todas las variables a numeric
Datos <- as.data.frame(sapply(Datos, as.numeric))
summary(Datos)
cor.matrix <- cor(Datos)
corrplot(cor.matrix, "circle", tl.cex = 0.5)
grafico1 <- ggplot(Datos, aes(x = Year, y = Reproduccion_bruta)) +
geom_line() +
geom_point() +
labs(title = "Reproducción Bruta por Año",
x = "Año",
y = "Reproducción Bruta") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p1.dinamico <- ggplotly(grafico1)
p1.dinamico
grafico2 <- ggplot(Datos, aes(x = Year, y = `Tasa de crecimiento natural (por cien habitantes)`)) +
geom_line() +
geom_point() +
labs(title = "Tasa de crecimiento natural por Año",
x = "Año",
y = "Tasa de crecimiento natural") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p2.dinamico <- ggplotly(grafico2)
p2.dinamico
grafico3 <- ggplot(Datos, aes(x = Year, y = `General (por mil habitantes)`)) +
geom_line() +
geom_point() +
labs(title = "Mortalidad general por mil habitantes por Año",
x = "Año",
y = "Mortalidad general por mil habitantes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p3.dinamico <- ggplotly(grafico3)
p3.dinamico
grafico4 <- ggplot(Datos, aes(x = Year, y = Poblacion_total)) +
geom_line() +
geom_point() +
labs(title = "Poblacion total por Año",
x = "Año",
y = "Poblacion total") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p4.dinamico <- ggplotly(grafico4)
p4.dinamico
grafico5 <- ggplot(Datos, aes(x = Year, y = `Tasa de nupcialidad (por mil habitantes)`)) +
geom_line() +
geom_point() +
labs(title = "Tasa de nupcialidad por mil habitantes por Año",
x = "Año",
y = "Nupcialidad por mil habitantes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p5.dinamico <- ggplotly(grafico5)
p5.dinamico
grafico.combinado <- ggplot(Datos) +
geom_line(aes(x = Year, y = Reproduccion_bruta, color = "Reproducción Bruta")) +
geom_point(aes(x = Year, y = Reproduccion_bruta, color = "Reproducción Bruta")) +
geom_line(aes(x = Year, y = `Tasa de crecimiento natural (por cien habitantes)`, color = "Tasa de crecimiento natural")) +
geom_point(aes(x = Year, y = `Tasa de crecimiento natural (por cien habitantes)`, color = "Tasa de crecimiento natural")) +
geom_line(aes(x = Year, y = `General (por mil habitantes)`, color = "Mortalidad general")) +
geom_point(aes(x = Year, y = `General (por mil habitantes)`, color = "Mortalidad general")) +
geom_line(aes(x = Year, y = `Tasa de nupcialidad (por mil habitantes)`, color = "Tasa de nupcialidad")) +
geom_point(aes(x = Year, y = `Tasa de nupcialidad (por mil habitantes)`, color = "Tasa de nupcialidad")) +
labs(title = "Diferentes Métricas por Año",
x = "Año",
y = "Valor",
color = "Métricas") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
grafico.combinado.dinamico <- ggplotly(grafico.combinado)
grafico.combinado.dinamico
grafico1 <- ggplot(Datos, aes(x = Year, y = Reproduccion_bruta)) +
geom_line() +
geom_point() +
labs(title = "Reproducción Bruta por Año",
x = "Año",
y = "Reproducción Bruta") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p1_dinamico <- ggplotly(grafico1)
grafico2 <- ggplot(Datos, aes(x = Year, y = `Tasa de crecimiento natural (por cien habitantes)`)) +
geom_line() +
geom_point() +
labs(title = "Tasa de crecimiento natural por Año",
x = "Año",
y = "Tasa de crecimiento natural") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p2_dinamico <- ggplotly(grafico2)
grafico3 <- ggplot(Datos, aes(x = Year, y = `General (por mil habitantes)`)) +
geom_line() +
geom_point() +
labs(title = "Mortalidad general por mil habitantes por Año",
x = "Año",
y = "Mortalidad general por mil habitantes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p3_dinamico <- ggplotly(grafico3)
grafico4 <- ggplot(Datos, aes(x = Year, y = Poblacion_total)) +
geom_line() +
geom_point() +
labs(title = "Poblacion total por Año",
x = "Año",
y = "Poblacion total") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p4_dinamico <- ggplotly(grafico4)
grafico5 <- ggplot(Datos, aes(x = Year, y = `Tasa de nupcialidad (por mil habitantes)`)) +
geom_line() +
geom_point() +
labs(title = "Tasa de nupcialidad por mil habitantes por Año",
x = "Año",
y = "Nupcialidad por mil habitantes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
p5_dinamico <- ggplotly(grafico5)
p1_dinamico
p2_dinamico
p3_dinamico
p4_dinamico
p5_dinamico
grafico_combinado <- ggplot(Datos) +
geom_line(aes(x = Year, y = Reproduccion_bruta, color = "Reproducción Bruta")) +
geom_point(aes(x = Year, y = Reproduccion_bruta, color = "Reproducción Bruta")) +
geom_line(aes(x = Year, y = `Tasa de crecimiento natural (por cien habitantes)`, color = "Tasa de crecimiento natural")) +
geom_point(aes(x = Year, y = `Tasa de crecimiento natural (por cien habitantes)`, color = "Tasa de crecimiento natural")) +
geom_line(aes(x = Year, y = `General (por mil habitantes)`, color = "Mortalidad general")) +
geom_point(aes(x = Year, y = `General (por mil habitantes)`, color = "Mortalidad general")) +
geom_line(aes(x = Year, y = `Tasa de nupcialidad (por mil habitantes)`, color = "Tasa de nupcialidad")) +
geom_point(aes(x = Year, y = `Tasa de nupcialidad (por mil habitantes)`, color = "Tasa de nupcialidad")) +
labs(title = "Diferentes Métricas por Año",
x = "Año",
y = "Valor",
color = "Métricas") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
grafico_combinado_dinamico <- ggplotly(grafico_combinado)
grafico_combinado_dinamico
Tabla_dinamica <- Datos %>%
select(Year, Poblacion_total,
Poblacion_hombres,
Poblacion_mujeres,
Reproduccion_bruta,
`Tasa de crecimiento natural (por cien habitantes)`,
`General (por mil habitantes)`,
Mortalidad_hombres,
Mortalidad_mujeres,
`Tasa de nupcialidad (por mil habitantes)`) %>%
rename(Mortalidad_general = `General (por mil habitantes)`)
Tabla <- datatable(Tabla_dinamica)
Tabla
